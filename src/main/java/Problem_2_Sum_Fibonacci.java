package main.java;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

/**
 * Recursion is not a viable solution in this case because Java doesn't want to make four million recursive calls
 * Go figure.
 */

public class Problem_2_Sum_Fibonacci {

    public static void main(String[] args) {
        int sumOfEvens = 0;
        int[] vals = {0, 1, 1};

        while(vals[2] < 4000000){
            vals[0] = vals[1];
            vals[1] = vals[2];
            vals[2] = vals[0] + vals[1];

            if(vals[2] % 2 == 0){
                sumOfEvens += vals[2];
            }
        }

        System.out.println(sumOfEvens);
    }


}
